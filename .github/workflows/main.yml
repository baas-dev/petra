on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: Prod Deploy

env:
  REPO_URL: 058264522604.dkr.ecr.us-east-1.amazonaws.com
  REPO_NAME: petra-client
  REPO_TAG: 1.0.4
  SERVICE_NAME: petra-client

jobs:
  build_and_tag:
    name: Build and Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR 🏷
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $REPO_URL/$REPO_NAME:$REPO_TAG .
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPO_URL
          docker push $REPO_URL/$REPO_NAME:$REPO_TAG
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_tag
    steps:
      - name: Install ssh
        run: sudo apt-get install -y openssh-client

      - name: SSH to manager node and update service
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_SERVER_IP: ${{ secrets.SSH_SERVER_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_SERVER_IP \
            "docker login --username AWS --password \$(aws ecr get-login-password --region us-east-1) $REPO_URL && \
            docker pull $REPO_URL/$REPO_NAME:$REPO_TAG && \
            docker compose up -d $SERVICE_NAME"
